apiVersion: v1
kind: ConfigMap
metadata:
  name: jumper-visit-ui-conf
  namespace: jumper
data:
  apiConfig.js: |
    window.apiConfig = {
      development: {
        VUE_APP_SASS_API: "http://mini-upms.ghosttyq.site",
        VUE_APP_CODE: "test_suifang"
      },
      production: {
        VUE_APP_BASE_API: "https://mini-visit.ghosttyq.site/jumper-gateway",
        VUE_APP_SASS_API: "https://mini-upms.ghosttyq.site",
        VUE_APP_CODE: "suifang"
      },
      test: {
        VUE_APP_BASE_API: "http://mini-visit.ghosttyq.site/jumper-gateway",
        VUE_APP_SASS_API: "http://mini-upms.ghosttyq.site",
        VUE_APP_CODE: "suifang"
      },
      uat: {
        VUE_APP_BASE_API: "https://mini-visit.ghosttyq.site/jumper-gateway",
        VUE_APP_SASS_API: "https://mini-upms.ghosttyq.site",
        VUE_APP_CODE: "suifang"
      }
    };
---
apiVersion: apps/v1  #版本号
kind: Deployment   #创建的资源类型
metadata:   #该资源的元数据，name必选项
  name: jumper-visit-ui   #name描述
  namespace: jumper  #命名空间
spec:    #规格说明
  replicas: 1    #副本数量
  selector:
    matchLabels:
      app: jumper-visit-ui
  template:      #定义pod的模板，配置文件的重要部分
    metadata:     #定义pod的元数据，至少定义一个label
      labels:
        app: jumper-visit-ui   #该pod拥有的标签，对应上面的spec.selector.matchLabels.app，否则匹配不上
    spec:        #描述pod的规格，定义pod中每个容器的属性，name和image必须
      imagePullSecrets:
      - name: hwhubsecret
      containers:    #容器描述
      - name: jumper-visit-ui
        image: swr.cn-south-1.myhuaweicloud.com/jumper/jumper-visit-ui-uat:latest       #镜像来源名字
        resources:
          requests:
            memory: "150Mi"
            cpu: "50m"        
        imagePullPolicy: Always     #拉取策略
        ports:   # 容器公开的端口列表。在这里公开端口可以为系统提供关于容器使用的网络连接的额外信息，但主要是提供描述信息
        - name: jumper-visit-ui
          containerPort: 8077
        args: ["./build.sh","8077","http://jumper-gateway-service.jumper:6001"]
        env:       
        - name: TZ  
          value: "Asia/Shanghai"
        volumeMounts:
        - name: jumper-visit-ui-conf
          readOnly: false
          mountPath: /opt/jumper-visit-ui/apiConfig.js
          subPath: apiConfig.js
      volumes:
      - name: jumper-visit-ui-conf
        configMap:
          name: jumper-visit-ui-conf
---
# 内部访问的服务
apiVersion: v1
kind: Service
metadata:
  name: jumper-visit-ui-service
  namespace: jumper  #命名空间  
spec:
  selector:
    app: jumper-visit-ui
  ports:
  - name: jumper-visit-ui
    port: 8077
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/ssl-redirect: "True"      
  name: jumper-visit-ui-ingress
  namespace: jumper  #命名空间
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - mini-visit.ghosttyq.site
    secretName: mini-visit.ghosttyq.site
  rules:  # 用于定义当前Ingress资源的转发规则列表；由rules定义规则，或没有匹配到规则时，所有的流量会转发到由backend定义的默认后端
  - host: mini-visit.ghosttyq.site
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:  #  默认的后端用于服务那些没有匹配到任何规则的请求；定义Ingress资源时，必须要定义backend或rules两者之一，该字段用于让负载均衡器指定一个全局默认的后端
          service:
            name: jumper-visit-ui-service    # Service资源名称
            port: 
              number: 8077   #Service端口（可以取ports里面的name，也可以取数字端口）     

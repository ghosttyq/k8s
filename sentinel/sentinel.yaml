# sentinel 容器
apiVersion: apps/v1  #版本号
kind: StatefulSet   #创建的资源类型
metadata:   #该资源的元数据，name必选项
  name: sentinel   #name描述
  namespace: jumper  #命名空间
spec:    #规格说明
  replicas: 1    #副本数量
  serviceName: sentinel-service    #声明它属于哪个Headless Service
  selector:
    matchLabels:
      app: sentinel
  template:      #定义pod的模板，配置文件的重要部分
    metadata:     #定义pod的元数据，至少定义一个label
      labels:
        app: sentinel   #该pod拥有的标签，对应上面的spec.selector.matchLabels.app，否则匹配不上
    spec:        #描述pod的规格，定义pod中每个容器的属性，name和image必须
      #restartPolicy: Always  # 容器的重启策略。Always(只要退出就重启)
      imagePullSecrets:
      - name: hwhubsecret
      containers:    #容器描述
      - name: sentinel
        image: swr.cn-south-1.myhuaweicloud.com/ghosttyq/sentinel-dashboard:1.8.0
        resources:
          requests:
            memory: "512Mi"
            cpu: "256m"        
        imagePullPolicy: Always     #拉取策略
        ports:   # 容器公开的端口列表。在这里公开端口可以为系统提供关于容器使用的网络连接的额外信息，但主要是提供描述信息
        - name: sentinel
          containerPort: 8858
        env:
        - name: NACOS_ADDRESS  
          value: "nacos-headless.jumper:8848"            
        - name: SENTINEL_USERNAME  
          value: "sentinel"  
        - name: SENTINEL_PASSWORD  
          value: "sentinel"  
        - name: NACOS_USERNAME  
          value: "nacos"  
        - name: NACOS_PASSWORD  
          value: "tyq841217!@#"          
        - name: TZ  
          value: "Asia/Shanghai"            
        volumeMounts:
        - name: sentinel-data   # volumeClaimTemplates的名称
          mountPath: /opt/logs   # 需要挂载的容器内地址
          subPath: ./logs     # 挂载的存储卷路径（必须是相对路径）           
      # 容污 允许部署到master节点
      tolerations:
        - key: "node-role.kubernetes.io/master"
          operator: "Equal"
          value: ""
          effect: "NoSchedule"
      # 亲和度 设置必须部署到master  
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname   # 键名，Node 节点的标签
                    operator: In         # 匹配条件
                    values:
                      - "k8smaster1"  
  volumeClaimTemplates:  # 存储卷申请模板，创建PVC，指定pvc名称大小，将自动创建pvc，且pvc必须由存储类供应
  - metadata:
      name: sentinel-data
    spec:
      accessModes: ["ReadWriteOnce"]  # pv的访问模式 ReadWriteOnce:可读科写，但支持被单个node挂载
      storageClassName: managed-nfs-storage1   #存储类名，使用集群中已存在的
      resources:
        requests:
          storage: 5Gi      
 
---
# 内部访问的Headless Service无头服务
apiVersion: v1
kind: Service
metadata:
  name: sentinel-service
  namespace: jumper  #命名空间
spec:
  selector:
    app: sentinel
  ports:
  - name: sentinel
    port: 8858
    targetPort: 8858
  clusterIP: None
 
---
# 外部访问的服务
apiVersion: v1
kind: Service
metadata:
  name: sentinel-external-service
  namespace: jumper  #命名空间
spec:
  selector:
    app: sentinel
  ports:
  - name: sentinel-port
    protocol: TCP
    port: 8858   # kubernetes中的服务之间访问的端口
    targetPort: 8858  #  容器的端口（最根本的端口入口），与制作容器时暴露的端口一致（DockerFile中EXPOSE）
  type: NodePort


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/ssl-redirect: "True"
  name: sentinel-ingress
  namespace: jumper  #命名空间
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - mini-sentinel.ghosttyq.site
    secretName: mini-sentinel.ghosttyq.site
  rules:  # 用于定义当前Ingress资源的转发规则列表；由rules定义规则，或没有匹配到规则时，所有的流量会转发到由backend定义的默认后端
  - host: mini-sentinel.ghosttyq.site
    http:
      paths:
      - path: /
        pathType: ImplementationSpecific
        backend:  #  默认的后端用于服务那些没有匹配到任何规则的请求
          service:
            name: sentinel-service    # Service资源名称
            port:
              number: 8858   #Service端口（可以取ports里面的name，也可以取数字端口）     
